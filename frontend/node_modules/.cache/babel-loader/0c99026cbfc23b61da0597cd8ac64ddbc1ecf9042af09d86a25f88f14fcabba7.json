{"ast":null,"code":"var _jsxFileName = \"D:\\\\taskmanagerapp\\\\frontend\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { Box, Flex, Button, Text, Spacer, useToast, IconButton, useColorMode } from '@chakra-ui/react';\nimport { useNavigate } from 'react-router-dom';\nimport { SunIcon, MoonIcon } from '@chakra-ui/icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const {\n    token,\n    logout\n  } = useContext(AuthContext);\n  const toast = useToast();\n  const navigate = useNavigate();\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  const handleLogout = () => {\n    logout();\n    toast({\n      title: 'Logged out successfully',\n      status: 'info',\n      duration: 2000,\n      isClosable: true\n    });\n    navigate('/auth');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    bg: \"brand.800\",\n    px: 6,\n    py: 4,\n    boxShadow: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        color: \"white\",\n        fontSize: \"xl\",\n        fontWeight: \"bold\",\n        letterSpacing: \"wide\",\n        cursor: \"pointer\",\n        onClick: () => navigate('/'),\n        children: \"Task Manager App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"Toggle dark mode\",\n        icon: colorMode === 'light' ? /*#__PURE__*/_jsxDEV(MoonIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 41\n        }, this) : /*#__PURE__*/_jsxDEV(SunIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 56\n        }, this),\n        onClick: toggleColorMode,\n        mr: 2,\n        colorScheme: \"gray\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), token && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"teal\",\n          variant: \"outline\",\n          mr: 2,\n          onClick: () => navigate('/profile'),\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"red\",\n          variant: \"solid\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"1PlJu5lc1AaZiCtxH+t0J//M/o0=\", false, function () {\n  return [useToast, useNavigate, useColorMode];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useContext","AuthContext","Box","Flex","Button","Text","Spacer","useToast","IconButton","useColorMode","useNavigate","SunIcon","MoonIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","_s","token","logout","toast","navigate","colorMode","toggleColorMode","handleLogout","title","status","duration","isClosable","bg","px","py","boxShadow","children","align","color","fontSize","fontWeight","letterSpacing","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","icon","mr","colorScheme","variant","_c","$RefreshReg$"],"sources":["D:/taskmanagerapp/frontend/src/components/Navbar.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { Box, Flex, Button, Text, Spacer, useToast, IconButton, useColorMode } from '@chakra-ui/react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { SunIcon, MoonIcon } from '@chakra-ui/icons';\r\n\r\nconst Navbar = () => {\r\n  const { token, logout } = useContext(AuthContext);\r\n  const toast = useToast();\r\n  const navigate = useNavigate();\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    toast({ title: 'Logged out successfully', status: 'info', duration: 2000, isClosable: true });\r\n    navigate('/auth');\r\n  };\r\n\r\n  return (\r\n    <Box bg=\"brand.800\" px={6} py={4} boxShadow=\"md\">\r\n      <Flex align=\"center\">\r\n        <Text color=\"white\" fontSize=\"xl\" fontWeight=\"bold\" letterSpacing=\"wide\" cursor=\"pointer\" onClick={() => navigate('/')}>Task Manager App</Text>\r\n        <Spacer />\r\n        <IconButton\r\n          aria-label=\"Toggle dark mode\"\r\n          icon={colorMode === 'light' ? <MoonIcon /> : <SunIcon />}\r\n          onClick={toggleColorMode}\r\n          mr={2}\r\n          colorScheme=\"gray\"\r\n        />\r\n        {token && (\r\n          <>\r\n            <Button colorScheme=\"teal\" variant=\"outline\" mr={2} onClick={() => navigate('/profile')}>\r\n              Profile\r\n            </Button>\r\n            <Button colorScheme=\"red\" variant=\"solid\" onClick={handleLogout}>\r\n              Logout\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}