{"ast":null,"code":"var _jsxFileName = \"D:\\\\taskmanagerapp\\\\frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getTasks, completeTask, deleteTask } from '../services/api';\nimport TaskItem from './TaskItem';\nimport TaskForm from './TaskForm';\nimport { Box, Heading, Spinner, Text, useToast } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const toast = useToast();\n  const fetchTasks = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const res = await getTasks();\n      setTasks(res.data);\n    } catch (err) {\n      setError('Failed to load tasks');\n      toast({\n        title: 'Failed to load tasks',\n        status: 'error',\n        duration: 2000,\n        isClosable: true\n      });\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    fetchTasks();\n    // eslint-disable-next-line\n  }, []);\n  const handleComplete = async id => {\n    try {\n      await completeTask(id);\n      toast({\n        title: 'Task marked as completed!',\n        status: 'success',\n        duration: 1500,\n        isClosable: true\n      });\n      fetchTasks();\n    } catch (err) {\n      toast({\n        title: 'Failed to complete task',\n        status: 'error',\n        duration: 2000,\n        isClosable: true\n      });\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await deleteTask(id);\n      toast({\n        title: 'Task deleted!',\n        status: 'info',\n        duration: 1500,\n        isClosable: true\n      });\n      fetchTasks();\n    } catch (err) {\n      toast({\n        title: 'Failed to delete task',\n        status: 'error',\n        duration: 2000,\n        isClosable: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    maxW: \"600px\",\n    mx: \"auto\",\n    mt: 8,\n    bg: \"white\",\n    p: 8,\n    borderRadius: \"lg\",\n    boxShadow: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      mb: 6,\n      color: \"brand.800\",\n      textAlign: \"center\",\n      children: \"Your Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onTaskAdded: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      size: \"lg\",\n      color: \"brand.600\",\n      display: \"block\",\n      mx: \"auto\",\n      my: 8\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Text, {\n      color: \"red.500\",\n      textAlign: \"center\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : tasks.length === 0 ? /*#__PURE__*/_jsxDEV(Text, {\n      color: \"gray.500\",\n      textAlign: \"center\",\n      children: \"No tasks found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n      task: task,\n      onComplete: handleComplete,\n      onDelete: handleDelete\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"Sd6Lkspe37azGabTSaGt2M5y7cY=\", false, function () {\n  return [useToast];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","getTasks","completeTask","deleteTask","TaskItem","TaskForm","Box","Heading","Spinner","Text","useToast","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","loading","setLoading","error","setError","toast","fetchTasks","res","data","err","title","status","duration","isClosable","handleComplete","id","handleDelete","maxW","mx","mt","bg","p","borderRadius","boxShadow","children","mb","color","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onTaskAdded","size","display","my","length","map","task","onComplete","onDelete","_c","$RefreshReg$"],"sources":["D:/taskmanagerapp/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getTasks, completeTask, deleteTask } from '../services/api';\r\nimport TaskItem from './TaskItem';\r\nimport TaskForm from './TaskForm';\r\nimport { Box, Heading, Spinner, Text, useToast } from '@chakra-ui/react';\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const toast = useToast();\r\n\r\n  const fetchTasks = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const res = await getTasks();\r\n      setTasks(res.data);\r\n    } catch (err) {\r\n      setError('Failed to load tasks');\r\n      toast({ title: 'Failed to load tasks', status: 'error', duration: 2000, isClosable: true });\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleComplete = async (id) => {\r\n    try {\r\n      await completeTask(id);\r\n      toast({ title: 'Task marked as completed!', status: 'success', duration: 1500, isClosable: true });\r\n      fetchTasks();\r\n    } catch (err) {\r\n      toast({ title: 'Failed to complete task', status: 'error', duration: 2000, isClosable: true });\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteTask(id);\r\n      toast({ title: 'Task deleted!', status: 'info', duration: 1500, isClosable: true });\r\n      fetchTasks();\r\n    } catch (err) {\r\n      toast({ title: 'Failed to delete task', status: 'error', duration: 2000, isClosable: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box maxW=\"600px\" mx=\"auto\" mt={8} bg=\"white\" p={8} borderRadius=\"lg\" boxShadow=\"lg\">\r\n      <Heading mb={6} color=\"brand.800\" textAlign=\"center\">Your Tasks</Heading>\r\n      <TaskForm onTaskAdded={fetchTasks} />\r\n      {loading ? (\r\n        <Spinner size=\"lg\" color=\"brand.600\" display=\"block\" mx=\"auto\" my={8} />\r\n      ) : error ? (\r\n        <Text color=\"red.500\" textAlign=\"center\">{error}</Text>\r\n      ) : tasks.length === 0 ? (\r\n        <Text color=\"gray.500\" textAlign=\"center\">No tasks found.</Text>\r\n      ) : (\r\n        tasks.map((task) => (\r\n          <TaskItem\r\n            key={task.id}\r\n            task={task}\r\n            onComplete={handleComplete}\r\n            onDelete={handleDelete}\r\n          />\r\n        ))\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}