{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\n\n// Set up axios instance\nconst api = axios.create({\n  baseURL: API_URL\n});\n\n// Add token to headers if present\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = token;\n  }\n  return config;\n});\n\n// Auth APIs\nexport const register = (username, password, name, contact_number, email) => api.post('/auth/register', {\n  username,\n  password,\n  name,\n  contact_number,\n  email\n});\nexport const login = (identifier, password) => api.post('/auth/login', {\n  identifier,\n  password\n});\n\n// Task APIs\nexport const getTasks = () => api.get('/tasks');\nexport const addTask = (title, description) => api.post('/tasks', {\n  title,\n  description\n});\nexport const completeTask = id => api.put(`/tasks/${id}/complete`);\nexport const deleteTask = id => api.delete(`/tasks/${id}`);\nexport const updateTask = (id, title, description) => api.put(`/tasks/${id}`, {\n  title,\n  description\n});\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","register","username","password","name","contact_number","email","post","login","identifier","getTasks","get","addTask","title","description","completeTask","id","put","deleteTask","delete","updateTask"],"sources":["D:/taskmanagerapp/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\n// Set up axios instance\r\nconst api = axios.create({\r\n    baseURL: API_URL,\r\n});\r\n\r\n// Add token to headers if present\r\napi.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        config.headers['Authorization'] = token;\r\n    }\r\n    return config;\r\n});\r\n\r\n// Auth APIs\r\nexport const register = (username, password, name, contact_number, email) =>\r\n    api.post('/auth/register', { username, password, name, contact_number, email });\r\n\r\nexport const login = (identifier, password) =>\r\n    api.post('/auth/login', { identifier, password });\r\n\r\n// Task APIs\r\nexport const getTasks = () => api.get('/tasks');\r\nexport const addTask = (title, description) =>\r\n    api.post('/tasks', { title, description });\r\nexport const completeTask = (id) =>\r\n    api.put(`/tasks/${id}/complete`);\r\nexport const deleteTask = (id) =>\r\n    api.delete(`/tasks/${id}`);\r\nexport const updateTask = (id, title, description) =>\r\n    api.put(`/tasks/${id}`, { title, description });\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH;AACb,CAAC,CAAC;;AAEF;AACAC,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAGH,KAAK;EAC3C;EACA,OAAOD,MAAM;AACjB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,cAAc,EAAEC,KAAK,KACpEhB,GAAG,CAACiB,IAAI,CAAC,gBAAgB,EAAE;EAAEL,QAAQ;EAAEC,QAAQ;EAAEC,IAAI;EAAEC,cAAc;EAAEC;AAAM,CAAC,CAAC;AAEnF,OAAO,MAAME,KAAK,GAAGA,CAACC,UAAU,EAAEN,QAAQ,KACtCb,GAAG,CAACiB,IAAI,CAAC,aAAa,EAAE;EAAEE,UAAU;EAAEN;AAAS,CAAC,CAAC;;AAErD;AACA,OAAO,MAAMO,QAAQ,GAAGA,CAAA,KAAMpB,GAAG,CAACqB,GAAG,CAAC,QAAQ,CAAC;AAC/C,OAAO,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,WAAW,KACtCxB,GAAG,CAACiB,IAAI,CAAC,QAAQ,EAAE;EAAEM,KAAK;EAAEC;AAAY,CAAC,CAAC;AAC9C,OAAO,MAAMC,YAAY,GAAIC,EAAE,IAC3B1B,GAAG,CAAC2B,GAAG,CAAC,UAAUD,EAAE,WAAW,CAAC;AACpC,OAAO,MAAME,UAAU,GAAIF,EAAE,IACzB1B,GAAG,CAAC6B,MAAM,CAAC,UAAUH,EAAE,EAAE,CAAC;AAC9B,OAAO,MAAMI,UAAU,GAAGA,CAACJ,EAAE,EAAEH,KAAK,EAAEC,WAAW,KAC7CxB,GAAG,CAAC2B,GAAG,CAAC,UAAUD,EAAE,EAAE,EAAE;EAAEH,KAAK;EAAEC;AAAY,CAAC,CAAC;AAEnD,eAAexB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}